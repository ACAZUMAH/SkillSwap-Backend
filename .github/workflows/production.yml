name: Vercel Preview Deployment
env: 
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on: 
  push:
    branches:
      - '**'
  
  workflow_dispatch:

jobs: 
  install: 
    name: Install Dependencies
    runs-on: ubuntu-latest

    outputs: 
      cache-hits: ${{ steps.cache.outputs.cache-hit }}

    steps:
      - name: Checkout Code 
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          
      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install 

  build: 
    name: Build Project
    needs: install
    runs-on: ubuntu-latest
    
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Dependencies
        run: yarn install

      - name: Build Project
        run: yarn build
      
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/

  Preview:
    name: Deploy to Vercel (Preview)
    needs: build
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/ 

      - name: Deploy Project Artifacts to vercel
        run: |
         vercel deploy --prebuilt --prod \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --org=${{ secrets.VERCEL_ORG_ID }} \
          --project=${{ secrets.VERCEL_PROJECT_ID }} \
          --confirm

  Production:
    name: Deploy to Vercel (Production)
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
        
      - name: Deploy Project Artifacts to vercel
        run: |
          vercel deploy --prebuilt --prod \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --org=${{ secrets.VERCEL_ORG_ID }} \
          --project=${{ secrets.VERCEL_PROJECT_ID }} \
          --confirm